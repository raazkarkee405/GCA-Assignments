{"version":3,"sources":["theme.js","config.js","wetherApi.js","components/weatherInfo/layouts/navbar.js","components/weatherInfo/home/currentWeatherCard.js","components/weatherInfo/home/weatherContainer.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","green","secondary","purple","CONFIG","WEATHER_API_KEY","WEATHER_API","WeatherAPI","getCurrentWeatherData","cityName","a","url","replace","axios","get","Navbar","props","state","AppBar","position","Toolbar","style","color","height","Typography","variant","noWrap","Component","CurrentWeatherCard","weather","this","data","iconUrl","icon","container","spacing","alignItems","justify","minHeight","Card","CardActionArea","CardContent","gutterBottom","component","name","sys","country","Date","toLocaleDateString","temp","src","className","alt","paddingLeft","description","marginTop","item","xs","sm","margin","sunrise","toLocaleString","sunset","temp_max","temp_min","pressure","humidity","WeatherContainer","getWeatherData","self","city","then","res","setState","weatherData","isLoading","handleChange","event","preventDefault","target","value","onClick","e","align","TextField","id","label","onChange","Button","type","CircularProgress","Routes","path","exact","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98cb37f8.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: green[200],\n        },\n        secondary: {\n            main: purple[500],\n        },\n    },\n\n});","export const CONFIG = {\n    WEATHER_API_KEY:\"6172d8ee8a401044dae4b49d37448060\",\n    WEATHER_API: \"http://api.openweathermap.org/data/2.5/weather?q=~&units=metric&appid=\"\n}","import axios from 'axios';\nimport {CONFIG} from './config';\n\nexport class WeatherAPI {\n\n    static getCurrentWeatherData = async (cityName) => {\n        let url = CONFIG.WEATHER_API.replace('~', cityName);\n        return await axios.get(url+CONFIG.WEATHER_API_KEY);\n    }\n}","import React, { Component } from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloudIcon from '@material-ui/icons/Cloud';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n        }\n    }\n    render() {\n        return (\n            <div>\n                <AppBar position=\"static\">\n                <Toolbar>\n                    <CloudIcon style={{color: 'orange', height: \"40px\"}}/>\n                    &nbsp;\n                <Typography variant=\"h6\" noWrap>\n                    Weather Data\n                </Typography>\n                </Toolbar>\n            </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n\n\nexport default class CurrentWeatherCard extends Component {\n    render() {\n        let weather = this.props.data;\n        const iconUrl = \"http://openweathermap.org/img/wn/\" + `${weather.weather[0].icon}` + \".png\";\n        return (\n            <div>\n                {\n                <Grid container\n                 spacing={0}\n                 alignItems=\"center\"\n                 justify=\"center\"\n                 style={{ minHeight: \"50vh\"}}>\n                <Card>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {weather.name}, {weather.sys.country}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\n            {new Date().toLocaleDateString()}\n          </Typography>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n           {weather.main.temp}Â°C\n           <img src={iconUrl} className=\"weather-icon\" alt=\"\" style={{paddingLeft: \"100px\"}}/> \n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n            {weather.weather[0].description}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n          <Grid container  spacing={2} style={{marginTop:20}}>\n                       <Grid  item xs=\"3\" sm=\"2\" style={{margin:10}}>\n                           <div>Sunrise</div>\n                           <div>{new Date(weather.sys.sunrise * 1000).toLocaleString()}</div>\n                       </Grid>\n                       <Grid  item xs=\"3\" sm=\"2\" style={{margin:10}}>\n                           <div>Sunset</div>\n                           <div>{new Date(weather.sys.sunset * 1000).toLocaleString()}</div>\n                       </Grid>\n                       <Grid  item xs=\"3\" sm=\"2\" style={{margin:10}}>\n                           <div>Max/Min Temp</div>\n                           <div>{weather.main.temp_max} /{\"\"} {weather.main.temp_min} <sup>o</sup>C</div>\n                       </Grid>\n                       <Grid  item xs=\"3\" sm=\"2\" style={{margin:10}}>\n                           <div>Pressure</div>\n                           <div>{weather.main.pressure} {\"\"}hPa</div>\n                       </Grid>\n                       <Grid  item xs=\"3\" sm=\"2\" style={{margin:10}}>\n                           <div>Humidity</div>\n                           <div>{weather.main.humidity} {\"\"} %</div>\n                       </Grid>\n                   </Grid>\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n                </Grid>\n                }\n            </div>\n        )\n    }\n}\n","import { CircularProgress } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport { WeatherAPI } from '../../../wetherApi'\nimport Navbar from '../layouts/navbar'\nimport CurrentWeatherCard from './currentWeatherCard'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nclass WeatherContainer extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             city: \"Kathmandu\",\n             weatherData:{},\n             isLoading:true,\n        }\n    }\n\n    componentDidMount() {\n        this.getWeatherData();\n    }\n\n    getWeatherData = () =>{\n        let self = this;\n        WeatherAPI.getCurrentWeatherData(this.state.city)\n        .then(res=>{\n          //  console.log(res.data);\n            self.setState({\n                weatherData:res.data,\n                isLoading:false\n            })\n        })\n    }\n\n    handleChange=(event)=>{\n        event.preventDefault();\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    onClick = (e) => {\n        e.preventDefault();\n        this.getWeatherData();\n    }\n    \n    render() {\n        return (\n            <div>\n                <Navbar /> \n               \n                <div align=\"center\"style={{margin:\"auto\", marginTop:\"40px\"}}>\n                       <TextField id=\"standard-basic\" label=\"Enter City\" name=\"city\" onChange={this.handleChange}/>\n                         <Button \n                            variant=\"contained\" \n                            color=\"primary\"\n                            type=\"button\"\n                            onClick={this.onClick}\n                        >\n                             Search\n                         </Button>\n                </div>\n                {\n                this.state.isLoading ? \n                <CircularProgress/> :\n                    <div>\n                       {<CurrentWeatherCard data={this.state.weatherData} />}\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default WeatherContainer;\n","import React, { Component } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from 'react-router-dom'\nimport WeatherContainer from './components/weatherInfo/home/weatherContainer'\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        //Route path for the weather\n                        <Route path=\"/weather\" exact>\n                            <WeatherContainer />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport React, { Component } from 'react'\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport { theme } from './theme';\nimport Routes from './routes';\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Routes />\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}